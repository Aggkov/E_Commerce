#spring.application.name=notification-service

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.ecommerce.notification.kafka.event.order.OrderSuccessEvent
#  ,orderInfo:com.ecommerce.notification.kafka.event.order.OrderInfo,orderItem:com.ecommerce.notification.kafka.event.order.OrderItem,user:com.ecommerce.notification.kafka.event.order.User,shippingAddress:com.ecommerce.notification.kafka.event.order.ShippingAddress,billingAddress:com.ecommerce.notification.kafka.event.order.BillingAddress,state:com.ecommerce.notification.kafka.event.order.State

# Increase this to match or exceed the producer's max.request.size
spring.kafka.consumer.properties.fetch.max.bytes=2097152
logging.level.org.springframework.kafka.support.serializer=DEBUG


# Spring Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Development Tools and Logging
spring.devtools.livereload.port=0
spring.devtools.restart.enabled=true
spring.devtools.restart.poll-interval=1000
spring.devtools.restart.quiet-period=500
logging.level.org.springframework.boot.devtools=DEBUG